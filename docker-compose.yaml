services:
  minio:
    image: ${MINIO_IMAGE}
    container_name: minio
    ports:
      - "${MINIO_PORT_API_EXTERNAL}:${MINIO_PORT_API_INTERNAL}"
      - "${MINIO_PORT_UI_EXTERNAL}:${MINIO_PORT_UI_INTERNAL}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
      - ./minio/init/init-bucket.sh:/init-bucket.sh
    command: server --console-address ":${MINIO_PORT_UI_INTERNAL}" /data
    restart: unless-stopped

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    volumes:
      - ./minio/minio_data:/upload-data
    entrypoint: >
      sh -c "
        sleep 5 &&
        mc alias set local http://${MINIO_ENDPOINT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
        mc mb local/${MINIO_BUCKET} || true &&
        mc cp /upload-data/demo.txt local/${MINIO_BUCKET}/
      "
    restart: "no"

  postgres:
    image: ${POSTGRES_IMAGE}
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT_EXTERNAL}:${POSTGRES_PORT_INTERNAL}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  portainer:
    image: ${PORTAINER_IMAGE}
    container_name: portainer
    ports:
      - "${PORTAINER_PORT_EXTERNAL}:${PORTAINER_PORT_INTERNAL}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: unless-stopped

volumes:
  minio_data:
  postgres_data:
  portainer_data:
